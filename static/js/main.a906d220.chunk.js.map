{"version":3,"sources":["utils/utils.tsx","utils/fetchLoop.helper.tsx","utils/connection.helper.tsx","utils/notifications.helper.tsx","wallet-adapters/types.ts","wallet-adapters/math/index.tsx","utils/wallet.utils.tsx","themeContext.js","components/Wallet.tsx","components/Navbar.tsx","components/MarketResume.tsx","components/Filters.tsx","redux/markets/types.js","mappers/outcome.mapper.ts","mappers/market.mapper.ts","redux/markets/middlewares.js","views/MarketListView.jsx","theme/select.theme.tsx","utils/transaction.helper.tsx","components/SwapBox.tsx","views/MarketView.jsx","views/404.tsx","components/Layout.tsx","App.tsx","reportWebVitals.js","redux/markets/reducers.js","redux/markets/index.js","redux/index.js","index.js"],"names":["Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","localStorageListeners","useLocalStorageStringState","key","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","length","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","pageLoadTime","Date","globalCache","Map","FetchLoopInternal","cacheKey","fn","cacheNullValues","timeoutId","listeners","errors","refresh","a","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","refreshInterval","refreshIntervalOnError","Math","min","timeSincePageLoad","document","visibilityState","hasFocus","random","setTimeout","this","Set","map","refreshIntervalsOnError","x","size","previousRefreshInterval","add","assert","delete","callback","loops","has","get","addListener","loop","removeListener","Promise","all","values","ENDPOINTS","name","endpoint","custom","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","value","useConnection","context","useContext","Error","useConnectionConfig","endpointInfo","find","info","customColor","background","text","message","description","txid","type","placement","note","show","DEFAULT_PUBLIC_KEY","PublicKey","MathWalletAdapter","_publicKey","_onProcess","_connected","connect","bind","transactions","_provider","signAllTransactions","window","solana","isMathWallet","transaction","signTransaction","open","getAccount","then","account","emit","catch","disconnect","finally","EventEmitter","ASSET_URL","WALLET_PROVIDERS","url","icon","adapter","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","setWallet","updateWallet","Wallet","readyState","removeEventListener","addEventListener","connected","setConnected","on","walletPublicKey","toBase58","substring","isModalVisible","setIsModalVisible","select","close","providerName","onClick","className","faTimes","alt","width","height","src","useWallet","setProvider","getInitialTheme","_","theme","matchMedia","matches","ThemeContext","ThemeProvider","initialTheme","setTheme","rawSetTheme","root","documentElement","isDark","classList","remove","WalletConnect","balance","setBalance","loadingBalance","setLoading","pk","getBalance","res","rounded","round","pow","spin","faSpinner","faPlug","Navbar","to","MarketResume","market","title","outcomes","loadingOrderbook","bestPrice","setBestPrice","setMarket","marketAddress","programId","Market","load","loadBids","loadAsks","asks","orderBook","getL2","Filters","filters","handler","currentFilters","filterClass","index","includes","e","handleClick","ADD_MARKETS_AND_FILTERS","ADD_MARKET","OutcomeMapper","outcome1Name","toUpperCase","address","outcome1Address","outcome2Name","outcome2Address","MarketMapper","markets","m","marketDTOtoMarket","category","marketDTOtoOutcomesArray","_api","axios","create","baseURL","fetchMarketById","dispatch","getState","payload","MarketListView","useDispatch","loading","setCurrentFilters","useSelector","marketsDTOtoMarketsArray","indexOf","times","Array","item","f","_getRGBColor","color","colors","primary","primary25","customStyle","control","provided","borderRadius","cursor","display","backgroundColor","menu","overflow","padding","option","isSelected","isFocused","getTransactions","from","amount","reduce","b","orders","i","useSerumMarket","setAsks","bids","setBids","bidLiquidity","setBidLiquidity","askLiquidity","setAskLiquidity","getAsks","getBids","totalLiquidity","direction","serumMarket","getMarket","SwapBox","serumMarkets","setFrom","setTo","options","setOptions","first_market","first_askLiquidity","label","baseMintAddress","toString","quoteMintAddress","handleSelect","setter","swap","tx","autoComplete","placeholder","onChange","o","styles","faArrowDown","disabled","faRetweet","MarketView","addr1","setAddr1","addr2","setAddr2","useParams","history","useHistory","parseInt","renderMarket","NotFound","Layout","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","reducers","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.a906d220.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetchLoop.helper';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  {\n    name: 'devnet',\n    endpoint: 'https://devnet.solana.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<EndpointInfo[]>('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}","import React from 'react';\nimport { notify as note } from 'react-notify-toast'\nconst customColor = { background: '#0E1717', text: \"#FFFFFF\" }\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'custom',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  note.show(\n    <div>\n      <div>{message}</div>\n      <div>{description}</div>\n    </div>, type, 3000, type === 'custom' ? customColor : null\n  );\n}","import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\n  '11111111111111111111111111111111',\n);\n\nexport interface WalletAdapter {\n  publicKey: PublicKey;\n  autoApprove: boolean;\n  connected: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\n  connect: () => any;\n  disconnect: () => any;\n  on<T>(event: string, fn: () => void): this;\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications.helper';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  private get _provider() {\n    if ((window as any)?.solana?.isMathWallet) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if (!this._provider) {\n      window.open('https://mathwallet.org/', '_blank');\n      notify({\n        type: 'error',\n        message: 'Math Wallet Error',\n        description: 'Please install mathwallet',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    this._provider\n      .getAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications.helper';\nimport { useConnectionConfig } from './connection.helper';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './../types/wallet.types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport {\n  WalletAdapter,\n  MathWalletAdapter,\n} from '../wallet-adapters';\n\nconst ASSET_URL =\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\nexport const WALLET_PROVIDERS = [\n  {\n    name: 'sollet.io',\n    url: 'https://www.sollet.io',\n    icon: `${ASSET_URL}/sollet.svg`,\n  },\n  {\n    name: 'MathWallet',\n    url: 'https://www.mathwallet.org',\n    icon: `${ASSET_URL}/mathwallet.svg`,\n    adapter: MathWalletAdapter,\n  }\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\n\n  const provider = useMemo(\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\n    [providerUrl],\n  );\n\n  let [wallet, setWallet] = useState<WalletAdapter|undefined>(undefined);\n\n  useEffect(() => {\n    if (provider) {\n      const updateWallet = () => {\n        // hack to also update wallet synchronously in case it disconnects\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        wallet = new (provider.adapter || Wallet)(\n          providerUrl,\n          endpoint,\n        ) as WalletAdapter;\n        setWallet(wallet);\n      }\n\n      if (document.readyState !== 'complete') {\n        // wait to ensure that browser extensions are loaded\n        const listener = () => {\n          updateWallet();\n          window.removeEventListener('load', listener);\n        };\n        window.addEventListener('load', listener);\n        return () => window.removeEventListener('load', listener);\n      } else {\n        updateWallet();\n      }\n    }\n  }, [provider, providerUrl, endpoint]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet) {\n      wallet.on('connect', () => {\n        if (wallet?.publicKey) {\n          console.log('connected');\n          localStorage.removeItem('feeDiscountKey');\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay =\n            walletPublicKey.length > 20\n              ? `${walletPublicKey.substring(\n                  0,\n                  7,\n                )}.....${walletPublicKey.substring(\n                  walletPublicKey.length - 7,\n                  walletPublicKey.length,\n                )}`\n              : walletPublicKey;\n\n          notify({\n            type: 'success',\n            message: 'Wallet update',\n            description: 'Connected to wallet ' + keyToDisplay,\n          });\n        }\n      });\n\n      wallet.on('disconnect', () => {\n        setConnected(false);\n        notify({\n          type: 'success',\n          message: 'Wallet update',\n          description: 'Disconnected from wallet',\n        });\n        localStorage.removeItem('feeDiscountKey');\n      });\n    }\n\n    return () => {\n      setConnected(false);\n      if (wallet && wallet.connected) {\n        wallet.disconnect();\n        setConnected(false);\n      }\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        select,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n      <div onClick={close} className={`flex justify-center items-center absolute top-0 left-0 w-full h-full bg-opposite bg-opacity-80 ${isModalVisible || 'hidden'}`}>\n        <div className=\"relative py-6 px-5 bg-depth-1 dark:bg-default shadow-xl rounded-xl max-w-sm w-full\">\n          <div className=\"absolute top-2 right-3\"><FontAwesomeIcon className=\"cursor-pointer text-md\" icon={faTimes} /></div>\n          <h2 className=\"mb-5\">Choose a Provider</h2>\n          {\n          WALLET_PROVIDERS.map((provider) => {\n          const onClick = function () {\n            setProviderUrl(provider.url);\n            setAutoConnect(true);\n            close();\n          };\n          return (\n            <div\n              className=\"p-2 rounded-md hover:bg-depth-2 flex items-center w-full cursor-pointer\"\n              key={provider.name}\n              onClick={onClick}\n            >\n              <img\n                  alt={`${provider.name}`}\n                  className=\"mr-4\"\n                  width={20}\n                  height={20}\n                  src={provider.icon}\n                />\n                <div>{provider.name}</div>\n            </div>\n          );\n        })}\n        </div>\n      </div>\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n\n  const wallet = context.wallet;\n  return {\n    connected: context.connected,\n    wallet: wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n    select: context.select,\n    connect() {\n      wallet ? wallet.connect() : context.select();\n    },\n    disconnect() {\n      wallet?.disconnect();\n    },\n  };\n}","import { createContext, useEffect, useState } from \"react\"\n\nconst getInitialTheme = _ => {\n  if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n    return 'dark'\n  } else {\n    return 'light'\n  }\n}\n\nexport const ThemeContext = createContext()\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n  const [theme, setTheme] = useState(getInitialTheme)\n\n  const rawSetTheme = theme => {\n    const root = window.document.documentElement\n    const isDark = theme === \"dark\"\n\n    root.classList.remove(isDark ? \"light\" : \"dark\")\n    root.classList.add(theme)\n\n    localStorage.setItem(\"color-theme\", theme)\n  }\n\n  if (initialTheme) {\n    rawSetTheme(initialTheme)\n  }\n\n  useEffect(\n    _ => {\n      rawSetTheme(theme)\n    },\n    [theme]\n  )\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}","\nimport { faPlug, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { PublicKey } from '@solana/web3.js';\nimport { useEffect, useState } from 'react';\nimport { useConnection, useConnectionConfig } from '../utils/connection.helper';\nimport { useWallet } from '../utils/wallet.utils';\nexport default function WalletConnect() {\n  const [balance, setBalance] = useState<number>(0)\n  const [loadingBalance, setLoading] = useState<boolean>(false)\n  const { connected, wallet, select, connect, disconnect } = useWallet();\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\n  const connection = useConnection()\n  const {\n    endpoint,\n    endpointInfo,\n  } = useConnectionConfig();\n  useEffect(() => {\n    if (connected) {\n      setLoading(true)\n      let pk = wallet?.publicKey\n      connection.getBalance(pk as PublicKey).then(res => {\n        let rounded = Math.round(res / Math.pow(10, 6)) / 1000\n        setBalance(rounded)\n      }).finally(() => setLoading(false))\n    }\n    else setBalance(0)\n  }, [connected])\n\n  //renders \n  const renderInfoConnection = () => {\n    return <div className=\"flex items-center\">\n      { loadingBalance ? <FontAwesomeIcon spin icon={faSpinner} /> : <div className=\"flex items-center mx-2\"><span>{balance}</span><span className=\"ml-1 text-primary font-bold\">SOL</span></div> }\n      <div className=\"mx-2 uppercase text-secondary font-bold\">{endpointInfo?.name}</div>\n    </div>\n  }\n  return (\n    <div className=\"flex items-center\">\n      { connected && renderInfoConnection()}\n      <button className=\"px-2 py-1 border border-primary rounded text-primary hover:border-opposite hover:text-default\" onClick={connected ? disconnect : connect}>\n        {connected ? 'Disconnect' : 'Connect'}\n        <FontAwesomeIcon className=\"ml-2\" icon={faPlug} />\n      </button>\n    </div>\n  );\n}","import { Link } from \"react-router-dom\"\nimport Wallet from './Wallet'\nconst Navbar = () => {\n  return (\n    <nav className=\"flex bg-depth-1 justify-center\">\n      <div className=\"h-12 container flex items-center justify-between w-full px-2\">\n        <div className=\"font-bold text-md\">\n          <Link to=\"/\"> <span className=\"text-primary\">BET</span>x </Link>\n        </div>\n        <div>\n          <Wallet></Wallet>\n        </div>\n      </div>\n    </nav>\n  )\n}\nexport default Navbar","import { Link } from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport { Market as MarketType } from \"../types/common.type\"\nimport { Account, Connection, PublicKey } from '@solana/web3.js';\nimport { Market } from '@project-serum/serum';\nimport { useEffect, useState } from \"react\";\nimport { useAccountInfo } from \"../utils/connection.helper\";\nconst OddBar = ({ percent }: { percent: number }) => {\n  return (\n    <div className=\"w-full bg-default h-2 overflow-hidden\">\n      <div className=\"bg-primary h-2\" style={ {width: percent+'%'}}></div>\n    </div>\n  )\n}\n\nOddBar.propTypes = {\n  percent: PropTypes.number\n}\n\nconst MarketResume = ({ market: {id, title, outcomes}} : { market: MarketType }) => {\n  const [loadingOrderbook, setLoading] = useState(true)\n  const [bestPrice, setBestPrice] = useState<number | null>(0)\n  const [market, setMarket] = useState<Market | null>(null)\n  useEffect(() => {\n    (async () => {\n      let connection = new Connection('https://api.mainnet-beta.solana.com');\n      let marketAddress = new PublicKey('HWHvQhFmJB3NUcu1aihKmrKegfVxBEHzwVX6yZCKEsi1');\n      let programId = new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'); // Serum program v3\n      let market = await Market.load(connection, marketAddress, {}, programId)\n      setMarket(market)\n      let bids = await market.loadBids(connection);\n      let asks = await market.loadAsks(connection);\n      let orderBook = asks.getL2(1)\n      setBestPrice(orderBook ? orderBook[0][0] : null)\n      setLoading(false)\n    })()\n  }, [])\n  return (\n    <Link to={`/market/${id}`}>\n      <div className=\"rounded bg-depth-1 p-2 shadow-sm hover:bg-depth-2 transition-color duration-100 ease-in\">\n        <div className=\"font-bold text-md mb-4\">\n          { title }\n        </div>\n        {\n          loadingOrderbook ?\n          <div className=\"bg-depth-2 w-full h-8 rounded skeleton\"></div> :\n          <div>\n            <div className=\"flex items-center justify-between\">\n              <div>{ outcomes[0].name }</div>\n              <div className=\"bg-opacity-70 rounded bg-primary text-opposite font-bold px-2 py-1\">{ bestPrice } <span className=\"text-default\">SOL</span></div>\n            </div>\n            {/* <OddBar percent={bestPrice} />   */}\n          </div>\n        }\n      </div>\n    </Link>\n  )\n}\n\nexport default MarketResume","const Filters = ({ filters, handler, currentFilters } : { filters: string[], handler: Function, currentFilters: string[]}) => {\n\n  // handlers\n  const handleClick = (filter: string) => {\n    handler(filter)\n  }\n\n  const filterClass = (filter: string, index: number) => {\n    return `${!currentFilters.includes(filter) || 'text-primary'} py-2 px-3 border-depth-2 hover:bg-depth-2 ${index ? 'border-l' : ''}`\n  }\n\n  // renders\n  const renderFilters = () => {\n    return filters.map((filter, index) => <div key={filter} className={filterClass(filter, index)} onClick={(e) => handleClick(filter)}>{filter}</div>)\n  }\n  return (\n    <div className=\"flex justify-center cursor-pointer bg-depth-1 rounded overflow-hidden\">\n      { renderFilters() }\n    </div>\n  )\n}\n\nexport default Filters","const ADD_MARKETS_AND_FILTERS = 'ADD_MARKETS_AND_FILTERS'\nconst ADD_MARKET = 'ADD_MARKET'\n\nexport { ADD_MARKETS_AND_FILTERS, ADD_MARKET }\n","import { Outcome } from \"../types/common.type\";\nimport { MarketDTO } from './../types/common.type'\n\nexport class OutcomeMapper {\n  static marketDTOtoOutcomesArray (market: MarketDTO): Outcome[] {\n    let outcome1 = {\n      name: market.outcome1Name.toUpperCase(),\n      address: market.outcome1Address\n    } as Outcome\n\n    let outcome2 = {\n      name: market.outcome2Name.toUpperCase(),\n      address: market.outcome2Address\n    } as Outcome\n    return [outcome1, outcome2]\n  }\n}","import { Market } from \"../types/common.type\";\nimport { OutcomeMapper } from \"./outcome.mapper\";\nimport { MarketDTO } from './../types/common.type'\nexport class MarketMapper {\n  static marketsDTOtoMarketsArray (markets: MarketDTO[]): Market[] {\n    return markets.map(m => this.marketDTOtoMarket(m))\n  }\n\n  static marketDTOtoMarket (market: MarketDTO): Market {\n    return {\n      title: market.title,\n      id: market.id,\n      type: market.type,\n      category: market.category,\n      address: market.marketAddress,\n      outcomes: OutcomeMapper.marketDTOtoOutcomesArray(market)\n    } as Market\n  }\n}","import { fakeMarkets } from '../../api/mock.api';\nimport { ADD_MARKET, ADD_MARKETS_AND_FILTERS } from './types';\n\nimport axios from 'axios'\nimport { MarketMapper } from '../../mappers/market.mapper';\nconst _api = axios.create({\n  baseURL: 'https://api.sheety.co/e045915699c6339af73ba9c1a52fccd8/betx'\n})\n\nexport const fetchMarkets = () => async (dispatch, getState) => {\n  let markets\n  let filters\n  try {\n    let { data } = await _api.get('/markets')\n    markets = MarketMapper.marketsDTOtoMarketsArray(data.markets)\n    filters = markets.map(m => m.category)\n  } catch (error) {\n    markets = []\n    filters = []\n  }\n  dispatch({\n    type: ADD_MARKETS_AND_FILTERS,\n    payload: {\n      markets,\n      filters: filters.filter((value, index) => filters.indexOf(value) === index)\n    }\n  })\n}\n\nexport const fetchMarketById = (id) => async (dispatch, getState) => {\n  let market\n  try {\n    let { data } = await _api.get(`/markets/${id}`)\n    market = MarketMapper.marketDTOtoMarket(data.market)\n  } catch (error) {\n    market = null\n  }\n  dispatch({\n    type: ADD_MARKET,\n    payload: market\n  })\n}","import { faSpinner } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport MarketResume from \"../components/MarketResume\"\nimport Filters from '../components/Filters'\n\nimport './MarketListView.css'\nimport { fetchMarkets } from '../redux/markets/middlewares'\nimport { useConnection } from \"../utils/connection.helper\"\nconst MarketListView = () => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true)\n  const [currentFilters, setCurrentFilters] = useState([])\n  const { markets, filters } = useSelector( state => state.markets )\n  useEffect(() => {\n      dispatch(fetchMarkets()).finally(() => setLoading(false))\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // renders \n  const renderMarkets = () => {\n    return markets.filter(market => !currentFilters.length || currentFilters.includes(market.category)).map((market) => <div key={market.id} className=\"item-fadeIn\"><MarketResume  market={market}/></div>)\n  }\n   const renderMarketSkeletons = (times) => {\n    return [...Array(times)].map((item, index) => <div key={`skeleton${index}`} className=\"w-full bg-depth-1 h-24 rounded skeleton\"></div>)\n   }\n\n   const renderFiltersSkeletons = () => {\n    return <div className=\"w-60 bg-depth-1 h-10 rounded skeleton\"></div>\n   }\n  // handlers\n  const handleFilterToggle = (filter) => {\n    if (currentFilters.includes(filter)) {\n      setCurrentFilters(currentFilters.filter(f => f !== filter))\n    }\n    else setCurrentFilters([...currentFilters, filter])\n  }\n\n  return (\n    loading ? \n      <div>\n        <div className=\"my-5 flex justify-center\">\n          { renderFiltersSkeletons(3) }\n        </div>\n        <div className=\"w-full flex items-center justify-center\">\n          <div className=\"w-full grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5\">\n            { renderMarketSkeletons(5)}\n          </div>\n        </div>\n      </div>\n    :\n    <div>\n      <div className=\"my-5 flex justify-center\">\n        <Filters filters={filters} handler={handleFilterToggle} currentFilters={currentFilters} />\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-5\">\n      { renderMarkets() }\n      </div>\n    </div>\n  )\n}\nexport default MarketListView\n","const _getRGBColor = color => `rgb(${color})`\nexport const theme = {\n  colors: {\n    primary: _getRGBColor('var(--color-primary)'),\n    primary25: _getRGBColor('var(--color-primary-depth-1)'),\n  }\n}\n\nexport const customStyle = {\n  control: (provided, state) => ({borderRadius: 15, cursor: 'pointer', display: 'flex', '&:hover': {\n    backgroundColor: _getRGBColor('var(--color-bg-depth-2)')\n  }}),\n  menu: provided => ({...provided, backgroundColor: _getRGBColor('var(--color-bg-depth-1)'), borderRadius: 15, overflow: 'hidden', padding: 0}),\n  option: (provided, state) => ({\n    ...provided,\n    color: state.isSelected || state.isFocused ? 'black' : _getRGBColor('var(--color-text-default)'),\n    cursor: 'pointer'\n    })\n}","import { Market } from \"@project-serum/serum\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport { useEffect, useState } from \"react\";\nimport { useConnection } from \"./connection.helper\";\ntype direction = 'asks' | 'bids'\nconst PROGRAM_ID = '9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'\nexport const getTransactions = async (from: PublicKey, to: PublicKey, amount: number) => {\n  let connection = new Connection('https://api.mainnet-beta.solana.com');\n  let marketAddress = new PublicKey('HWHvQhFmJB3NUcu1aihKmrKegfVxBEHzwVX6yZCKEsi1');\n  let programId = new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin');// Serum program v3\n  let market = await Market.load(connection, marketAddress, {}, programId)\n  let asks = await market.loadAsks(connection);\n  let orderBook = asks.getL2(1000000000)\n  console.log(orderBook.map(([price, size]) => size).reduce((a, b) => a + b, 0))\n  let orders: [number, number, any, any][] = []\n  let i = 0\n  while(i < orderBook.length && amount > 0) {\n    let [price, size] = orderBook[i]\n    orders.push(orderBook[i])\n    amount = amount - size\n    ++i\n  }\n  return orders\n}\n\n\nexport function useSerumMarket(address: PublicKey) : [\n  Market | null, [number, number, any, any][], [number, number, any, any][], number, number\n] {\n  const connection = useConnection()\n  const [market, setMarket] = useState<Market | null>(null)\n  const [asks, setAsks] = useState<[number, number, any, any][]>([])\n  const [bids, setBids] = useState<[number, number, any, any][]>([])\n  const [bidLiquidity, setBidLiquidity] = useState<number>(0)\n  const [askLiquidity, setAskLiquidity] = useState<number>(0)\n  const getAsks = async (amount: number = 10000000000) => {\n    let asks = (await market?.loadAsks(connection))?.getL2(amount)\n    return asks || []\n  }\n\n  const getBids = async (amount: number = 10000000000) => {\n    let bids = (await market?.loadBids(connection))?.getL2(amount)\n    return bids || []\n  }\n\n  const totalLiquidity = async (direction: direction) => {\n    debugger\n    let orders = direction === 'asks' ? (await asks || []) : (await bids || [])\n    return orders?.map(([price, size]) => size).reduce((a, b) => a + b, 0)\n  }\n  useEffect(() => {\n    const getMarket = async () => {\n      let programId = new PublicKey(PROGRAM_ID);// Serum program v3\n      let serumMarket = await Market.load(connection, address as PublicKey, {}, programId)\n      if (!market) setMarket(serumMarket)\n      console.log(market)\n      debugger\n      setAsks(await getAsks())\n      setBids(await getBids())\n      setAskLiquidity(await totalLiquidity('asks'))\n      setBidLiquidity(await totalLiquidity('bids'))\n    }\n    debugger\n    if (address) getMarket()\n  }, [market])\n  \n    return [\n      market,\n      asks,\n      bids,\n      bidLiquidity,\n      askLiquidity,\n    ];\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowDown, faRetweet } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react'\nimport Select from 'react-select'\nimport { theme, customStyle} from '../theme/select.theme'\nimport { useWallet } from '../utils/wallet.utils';\nimport { getTransactions, useSerumMarket } from '../utils/transaction.helper'\nimport { Market as MarketType } from '../types/common.type'\nimport { PublicKey } from '@solana/web3.js'\nimport { ThemeConfig } from 'react-select/src/theme'\n\n\nconst SwapBox = ({ serumMarkets, market } : { serumMarkets: PublicKey[], market: MarketType}) => {\n  const [from, setFrom] = useState<PublicKey | null>(null)\n  const [to, setTo] = useState<PublicKey | null>(null)\n  const { connected } = useWallet();\n  const [options, setOptions] = useState<any[]>([])\n  const [\n    first_market,\n    first_asks,\n    first_bids,\n    first_bidLiquidity,\n    first_askLiquidity,\n  ] = useSerumMarket(serumMarkets[0])\n    const [\n    second_market,\n    second_asks,\n    second_bids,\n    second_bidLiquidity,\n    second_askLiquidity,\n  ] = useSerumMarket(serumMarkets[1])\n  \n\n  useEffect(() => {\n    if (market && first_market) {\n      setOptions([\n        {label: 'SOL', value: first_market.baseMintAddress.toString()},\n        {label: market.outcomes[0].name, value: first_market.quoteMintAddress.toString()},\n        {label: market.outcomes[1].name, value: first_market.quoteMintAddress}\n      ])\n    }\n  }, [market, first_market])\n  // handlers\n  const handleSelect = (option, setter) => {\n    setter(option)\n  }\n  const swap = async () => {\n    let tx = await getTransactions(from as PublicKey, to as PublicKey, 20)\n    console.log(tx)\n  }\n\n  return (\n    <div className=\"w-full relative max-w-md\">\n      {/* CONSULTAR */}\n      {/* <div className=\"absolute top-0 -m-4 rounded-xl opacity-30 w-full h-full bg-primary\"></div>\n      <div className=\"absolute top-0 m-4 rounded-xl opacity-30 w-full h-full bg-secondary\"></div> */}\n      <div className=\"relative w-full max-w-md p-4 shadow bg-depth-1 rounded-xl\">\n        <h1 className=\"px-4 text-center font-bold text-lg mb-4\">{market.title}</h1>\n        <div className=\"rounded-2xl border border-depth-2 py-4 px-6 flex justify-between items-end\">\n          <div>\n            <div className=\"text-depth-1 uppercase text-sm mb-2\">swap</div>\n            <input autoComplete=\"off\" placeholder=\"0.0\" className=\"no-arrows font-mono outline-none text-md bg-depth-1\" id=\"from\" type=\"number\"/>\n          </div>\n          <div className=\"flex-1\">\n            <Select id=\"from\" value={from} onChange={(o) => handleSelect(o, setFrom)} styles={customStyle} theme={theme as any} options={[options[0]]}/>\n          </div>\n        </div>\n        <div className=\"my-4 text-primary flex justify-center\">\n          <FontAwesomeIcon className=\"opacity-40 text-lg\" icon={faArrowDown} />\n        </div>\n        <div className=\"rounded-2xl border border-depth-2 py-4 px-6 flex justify-between items-end\">\n          <div>\n            <div className=\"text-depth-1 uppercase text-sm mb-2\">To</div>\n            <input autoComplete=\"off\" placeholder=\"0.0\" className=\"no-arrows font-mono outline-none text-md bg-depth-1\" id=\"from\" type=\"number\"/>\n          </div>\n          <div className=\"flex-1\">\n            <Select id=\"to\" value={to} onChange={(o) => handleSelect(o, setTo)} styles={customStyle} theme={theme as any} options={[options[1], options[2]]}/>\n          </div>\n        </div>\n        <div className=\"p-2 text-sm uppercase text-primary text-right\">max liquidity { first_askLiquidity }</div>\n        <button disabled={!connected} onClick={swap} className=\"my-4 w-full uppercase font-bold text-center bg-gradient-to-r from-primary to-secondary text-opposite rounded-md px-6 py-4 text-md shadow hover:text-default hover:disabled:text-opposite transition-color duration-150 ease-in disabled:opacity-20 disabled:cursor-not-allowed\">Swap <FontAwesomeIcon icon={faRetweet} /></button>\n      </div>\n    </div>\n  )\n}\nexport default SwapBox\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router'\nimport { fetchMarketById } from '../redux/markets/middlewares'\nimport { useHistory } from \"react-router-dom\";\nimport SwapBox from '../components/SwapBox'\nimport { PublicKey } from '@solana/web3.js'\n\n\nconst MarketView = () => {\n  const [loading, setLoading] = useState(true)\n  const [addr1, setAddr1] = useState(null)\n  const [addr2, setAddr2] = useState(null)\n  const { id } = useParams()\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const market = useSelector(state => state.markets.markets.find(market => market.id === parseInt(id)))\n  useEffect(() => {\n    (async () => {\n      await dispatch(fetchMarketById(id))\n      let marketAddress = new PublicKey('HWHvQhFmJB3NUcu1aihKmrKegfVxBEHzwVX6yZCKEsi1');\n      setAddr1(marketAddress)\n      setAddr2(marketAddress)\n      setLoading(false)\n    })()\n  }, [])\n\n\n  //renders\n  const renderMarket = () => {\n    if (!market) history.push('/404')\n    else return <SwapBox serumMarkets={[addr1, addr2]} market={market}/>\n  }\n\n  return (\n    <div className=\"flex justify-center items-center h-full\">\n    { loading ? <FontAwesomeIcon className=\"opacity-50 text-2xl\" spin icon={faSpinner} /> : renderMarket()}\n    </div>\n  )\n}\nexport default MarketView\n","const NotFound = () => {\n  return <div className=\"text-2xl text-center\">\n    <p>Oops, <span className=\"font-bold text-primary\"> 404 </span> Not Found</p></div>\n}\n\nexport default NotFound","import { ThemeProvider } from \"../themeContext\"\nimport Navbar from './Navbar'\nimport MarketListView from '../views/MarketListView'\nimport MarketView from '../views/MarketView'\nimport Notifications from 'react-notify-toast';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport NotFound from \"../views/404\"\n\nconst Layout = () => {\n  return (\n    <ThemeProvider initialTheme=\"light\">\n      <Router>\n        <div className=\"min-h-screen flex flex-col\">\n          <Navbar />\n          <main className=\"flex-1 flex justify-center\">\n              <div className=\"container my-10 w-full\">\n              <Switch>\n                <Route exact path=\"/\" component={MarketListView} />\n                <Route exact path=\"/market/:id\" component={MarketView} />\n                <Route component={NotFound} />\n              </Switch>\n              </div>\n          </main>\n        </div>\n      </Router>\n      <Notifications />\n    </ThemeProvider>\n  )\n}\nexport default Layout","import Layout from \"./components/Layout\";\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_MARKETS_AND_FILTERS, ADD_MARKET } from \"./types\"\n\nconst initialState = {\n  markets: [],\n  filters: []\n}\n\nexport default function reducer(state = initialState, action){\n  switch (action.type){\n  case ADD_MARKETS_AND_FILTERS:\n    return {\n      ...state,\n      markets: action.payload.markets,\n      filters: action.payload.filters\n    }\n  case ADD_MARKET:\n    return {\n      ...state,\n      markets: action.payload ? [\n        ...state.markets.filter(m => m.id !== action.payload.id),\n        action.payload\n      ] : state.markets\n    }\n  default:\n    return state;\n  }\n}","import reducer from './reducers'\nexport default reducer","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\n\nimport markets from './markets'\nconst reducers = combineReducers({\n  markets\n})\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk)),\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ConnectionProvider } from './utils/connection.helper';\nimport { WalletProvider } from './utils/wallet.utils';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectionProvider>\n        <WalletProvider>\n          <App />\n        </WalletProvider>\n      </ConnectionProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}